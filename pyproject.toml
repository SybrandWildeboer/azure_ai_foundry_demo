[tool.poetry]
name = "azure-ai-foundry-demo"
version = "0.1.0"
description = "Azure AI Foundry multi-agent demo"
authors = []
readme = "README.md"
packages = [{ include = "azure_ai_foundry_demo", from = "src" }]

[tool.poetry.dependencies]
python = "^3.11"
python-dotenv = "^1.0.1"
pydantic = "^2.8.2"
pydantic-settings = "^2.6.1"
httpx = "^0.27.2"
azure-ai-agents = "^1.0.0b2"
azure-ai-projects = "^1.0.0b5"
azure-identity = "^1.18.0"
streamlit = "^1.38.0"
altair = "^5.3.0"
pandas = "^2.2.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-asyncio = "^0.23.8"
pytest-mock = "^3.14.0"
pre-commit = "^3.8.0"
respx = "^0.20.2"
ruff = "^0.6.3"
black = "^24.8.0"
pytest-cov = "^5.0.0"

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"

[tool.black]
target-version = ["py311"]
line-length = 100

[tool.isort]
profile = "black"
line_length = 100

[tool.ruff]
target-version = "py311"
line-length = 100

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "N"]

[tool.coverage.run]
source = ["azure_ai_foundry_demo"]
omit = [
	"src/azure_ai_foundry_demo/agents/orchestrator.py",
	"src/azure_ai_foundry_demo/agents/runner.py",
	"src/azure_ai_foundry_demo/agents/tooling.py",
	"src/azure_ai_foundry_demo/streamlit_app.py",
]

[tool.coverage.report]
fail_under = 80
show_missing = true

[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"
